/*
 * ICS4U Summative
 * Course Planner
 * Agenda
 */
package courseplanner;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author sara
 */
public class Agenda extends javax.swing.JFrame {

    /**
     * Creates new form Agenda
     */
    public Agenda() {
        initComponents();
        setTitle("Agenda");
        getContentPane().setBackground(new java.awt.Color(72,209,204));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        Title = new javax.swing.JLabel();
        addItem = new javax.swing.JButton();
        updateItem = new javax.swing.JButton();
        deleteItem = new javax.swing.JButton();
        exportTable = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        agendaTable = new javax.swing.JTable();
        importTable = new javax.swing.JButton();
        mainMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setText("Agenda");

        addItem.setText("Add Item");
        addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemActionPerformed(evt);
            }
        });

        updateItem.setText("Update Item");
        updateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemActionPerformed(evt);
            }
        });

        deleteItem.setText("Delete Item");
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });

        exportTable.setText("Export Table");
        exportTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportTableActionPerformed(evt);
            }
        });

        agendaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course", "Type", "Date", "Grade"
            }
        ));
        scrollPane.setViewportView(agendaTable);

        importTable.setText("Import Table");
        importTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTableActionPerformed(evt);
            }
        });

        mainMenu.setText("Main Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mainMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(importTable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exportTable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(Title)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(mainMenu)
                        .addGap(18, 18, 18)
                        .addComponent(importTable)
                        .addGap(18, 18, 18)
                        .addComponent(exportTable)
                        .addGap(84, 84, 84)
                        .addComponent(addItem)
                        .addGap(18, 18, 18)
                        .addComponent(updateItem)
                        .addGap(18, 18, 18)
                        .addComponent(deleteItem))
                    .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    // add item button
    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // get user input
        String agendaCourse = JOptionPane.showInputDialog("Enter the course");
        String agendaType = JOptionPane.showInputDialog("Enter the type of assessment due");
        String agendaDate = JOptionPane.showInputDialog("Enter the due date");
        String agendaGrade = JOptionPane.showInputDialog("Enter the grade if recieved");
        
        // put data into new table row
        Object agendaItem[] = new Object[4];
        agendaItem[0] = agendaCourse;
        agendaItem[1] = agendaType;
        agendaItem[2] = agendaDate;
        agendaItem[3] = agendaGrade;
        
        DefaultTableModel table = (DefaultTableModel)agendaTable.getModel();
        table.addRow(agendaItem);
    }                                       
    
    // update item button
    private void updateItemActionPerformed(java.awt.event.ActionEvent evt) {                                           
        DefaultTableModel table = (DefaultTableModel)agendaTable.getModel();
        int selectedRow = agendaTable.getSelectedRow();
        int selectedCol = agendaTable.getSelectedColumn();
        String message = null;
        
        // replace data in selected table cell if any changes are made
        try {
            String agendaItem = table.getValueAt(selectedRow, selectedCol).toString();
            switch (selectedCol) {
                case 0:
                    message = "Enter any changes to the course";
                    break;
                case 1:
                    message = "Enter any changes to the type of assessment due";
                    break;
                case 2:
                    message = "Enter any changes to the date";
                    break;
                case 3:
                    message = "Enter any changes to the grade";
                default:
                    break;
            }
                    
            String newAgendaCourse = JOptionPane.showInputDialog(null, message, agendaItem);
            table.setValueAt(newAgendaCourse, selectedRow, selectedCol);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No cell selected");
        }
    }                                          

    // delete item button
    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {                                           
        DefaultTableModel table = (DefaultTableModel) agendaTable.getModel();
        
        // delete selected row
        try {
            int selectedRowIndex = agendaTable.getSelectedRow();
            table.removeRow(selectedRowIndex);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No row selected");
        }
    }                                          
    
    // export table button
    private void exportTableActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // create new text file if not already created
        // save contents of table to text file
        try {
            File file = new File("C:\\Users\\sara\\OneDrive\\Documents\\Agenda.txt");
            if (!file.exists()) {
                file.createNewFile();
            }
            
            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            
            for (int i = 0; i < agendaTable.getRowCount(); i++) {
                for (int j = 0; j < agendaTable.getColumnCount(); j++) {
                    bw.write((String)agendaTable.getModel().getValueAt(i,j) + ",");
                }
                bw.write(" \n");
            }
            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(null, "Data has been saved");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }                                           

    // import table button
    private void importTableActionPerformed(java.awt.event.ActionEvent evt) {                                            
        String fileLocation = "C:\\Users\\sara\\OneDrive\\Documents\\Agenda.txt";
        File file = new File(fileLocation);
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel table = (DefaultTableModel)agendaTable.getModel();          
            Object[] agendaLines = br.lines().toArray();
            table.setRowCount(0);
            
            for(int i = 0; i < agendaLines.length; i++) {
                String agendaLine = agendaLines[i].toString().trim();
                String[] agendaItem = agendaLine.split(",");
                table.addRow(agendaItem);
            }
            br.close();
        } catch (Exception ex) {
            Logger.getLogger(Agenda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Title;
    private javax.swing.JButton addItem;
    private javax.swing.JTable agendaTable;
    private javax.swing.JButton deleteItem;
    private javax.swing.JButton exportTable;
    private javax.swing.JButton importTable;
    private javax.swing.JButton mainMenu;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JButton updateItem;
    // End of variables declaration                   
}
